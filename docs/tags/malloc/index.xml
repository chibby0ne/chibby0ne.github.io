<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>malloc on Murmurations of Neurons</title><link>https://www.antoniojgutierrez.com/tags/malloc/</link><description>Recent content in malloc on Murmurations of Neurons</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Antonio Gutierrez 2015-2021. CC-BY-NC 4.0</copyright><lastBuildDate>Mon, 20 Jun 2022 00:28:23 +0200</lastBuildDate><atom:link href="https://www.antoniojgutierrez.com/tags/malloc/index.xml" rel="self" type="application/rss+xml"/><item><title>What is xmalloc?</title><link>https://www.antoniojgutierrez.com/posts/2022-06-08-what_is_xmalloc/</link><pubDate>Mon, 20 Jun 2022 00:28:23 +0200</pubDate><guid>https://www.antoniojgutierrez.com/posts/2022-06-08-what_is_xmalloc/</guid><description>What is it? What does it do? xmalloc is a non-standard function that wraps malloc and terminates the program if malloc fails to the allocate the requested memory.
I was running some of the examples in bork&amp;rsquo;s linux tracing post, and noticed that when running the uprobe example:
sudo ./bin/uprobe &amp;#39;r:bash:readline +0($retval):string&amp;#39; it returned an error:
ERROR: missing symbol &amp;#34;malloc&amp;#34; in /usr/bin/bash which was odd but perhaps that version of bash used by bork was indeed using malloc and current versions of bash used a different flavor of it, like calloc, realloc, etc&amp;hellip;</description></item></channel></rss>