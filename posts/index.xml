<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Bits and pieces</title><link>https://chibby0ne.github.io/posts/</link><description>Recent content in Posts on Bits and pieces</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Antonio Gutierrez 2020. CC-BY-NC 4.0</copyright><lastBuildDate>Mon, 04 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://chibby0ne.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Fixing Firefox screen tearing while scrolling / video playback</title><link>https://chibby0ne.github.io/posts/2020-05-04-firefox_screen_tearing_while_scrolling/</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2020-05-04-firefox_screen_tearing_while_scrolling/</guid><description>For a while now I&amp;rsquo;ve noticed screen tearing while scrolling on Wikipedia or on YouTube videos whenever there&amp;rsquo;s sudden movement.
Today I decided to do something about it, and considering I hadn&amp;rsquo;t touch the Xorg conf files &amp;ldquo;generated&amp;rdquo; by nvidia-xconfig in more than 4 years, I was optimistic that it would be some configuration issue that would have been automatically resolved by now with newer drivers and OpenGL versions. Furthermore as the quotes on generated suggest, they weren&amp;rsquo;t pristine generated Xorg conf files since I had tinkered with them quite a bit in the past when I was running two Nvidia cards on Arch which I mentioned in passing in a previous post</description></item><item><title>Mounting/Playing/Ripping audio CDs like it's 1995 (in Arch Linux)</title><link>https://chibby0ne.github.io/posts/2020-02-01-ripping_audio_cds_like_its_1995/</link><pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2020-02-01-ripping_audio_cds_like_its_1995/</guid><description>First post of the year! Yey!
Like many other posts, the motivation of this one is to facilitate other people running into the same issues as me, to quickly find their solution.
So here&amp;rsquo;s the problem statement:
You want to play an audio CD in an Arch Laptop or simply get the audio files. What do you do?
Well first you buy an external CD/DVD ROM player, which you can connect (and power) through USB.</description></item><item><title>Backing up Google Authenticators's Keys from an Android Phone</title><link>https://chibby0ne.github.io/posts/2019-12-15-backing_up_google_authenticator_keys/</link><pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2019-12-15-backing_up_google_authenticator_keys/</guid><description>I wanted to backup my 2FA codes stored in Google&amp;rsquo;s Authenticator app. I don&amp;rsquo;t want lose access to my accounts, in case I lose that phone.
Sure there are also the backup codes, which are given/shown whenever 2FA is set up, and are intended to be used on a rainy day such as when your phone dies, gets stolen, or simply wiped accidentally or even on purpose but they just forgot about the 2FA codes living there (not speaking from personal experience at all of course :cry: ).</description></item><item><title>Using a credential store for DockerHub login</title><link>https://chibby0ne.github.io/posts/2018-08-11-docker_login_password_store/</link><pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-08-11-docker_login_password_store/</guid><description>Whenever there&amp;rsquo;s a need to push images (public or private) or pull images from privates repositories from DockerHub you need to login first. With the docker client CLI that&amp;rsquo;s achieved with:
docker login It then asks for the credentials to use for logging in. The problem with this approach is explicitly mentioned in output of that command.
In my case:
Login with your Docker ID to push and pull images from Docker Hub.</description></item><item><title>Installing Tensorflow with GPU acceleration in Arch</title><link>https://chibby0ne.github.io/posts/2018-05-11-installing_tensorflow_with_gpu_in_arch/</link><pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-05-11-installing_tensorflow_with_gpu_in_arch/</guid><description>I recently started doing the fast.ai course where you follow a top-down approach into the world of machine learning.
The first thing you need to do is have access to a Nvidia GPU, and in the first video lesson they show the setup of a cloud instance that runs Tensorflow using either crestle or paperspace.
But since either of them are paid by the hour, and considering I already have Nvidia GPU in my desktop (albeit not as powerful as the ones offered in the aforementioned services, just an GTX 1070), I thought of going in a tangent and setting it up myself.</description></item><item><title>Log base 10 vs Log base e notation</title><link>https://chibby0ne.github.io/posts/2018-05-07-log_base_10_vs_log_base_e_notation/</link><pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-05-07-log_base_10_vs_log_base_e_notation/</guid><description>I wrote this post after struggling for a few hours with the derivation of the negative log-likelihood function , and finding out that the derivative didn&amp;rsquo;t match what was expected, only to find out that it was indeed matching and that instead, there&amp;rsquo;s a discrepancy on the semantics of the &amp;ldquo;log&amp;rdquo; notation.
Let&amp;rsquo;s go step by step:
Two of the most common logarithms are the logarithm of base $$e$$, also called natural logarithm which is written in two forms:</description></item><item><title>Using Javascript completion including adding Google Chrome API in vim</title><link>https://chibby0ne.github.io/posts/2018-04-20-vim-ycm-tern-chrome-extension/</link><pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-04-20-vim-ycm-tern-chrome-extension/</guid><description>YouCompleteMe is a very powerful code completion engine built for the vim editor. It has several completion engines for many languages including C/C++, Rust, Go, Python, Javascript among others. It contains two parts: a vim-plugin and a daemon.
A very simple explanation of how YouCompleteMe works is by starting a server whenever a file is opened whose filetype corresponds to one of the installed languages engines. After this, the file is analyzed by communicating with from vim using the vim plugin (client) to the daemon (server).</description></item><item><title>Automount SMB directory with systemd in Arch</title><link>https://chibby0ne.github.io/posts/2018-04-09-automounting_systemd/</link><pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-04-09-automounting_systemd/</guid><description>Problem statement I wanted to mount a directory from a local desktop in my laptop regardless of the OS it might be running at the moment. Also, not just mount it. Automount it either whenever I boot or on demand.
At the moment in my particular case, both laptop and desktop are running Arch Linux.
First let&amp;rsquo;s do a bit of a primer:
SMB Primer SMB is a network protocol (that also acts as a network/distributed file system) used for sharing file and print services between Windows clients.</description></item><item><title>Setting up a Raspberry Pi Cluster (Part 1)</title><link>https://chibby0ne.github.io/posts/2018-03-28-setting_up_rpi_cluster/</link><pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-03-28-setting_up_rpi_cluster/</guid><description>I recently decided to set up a raspberry pi cluster, with whom I could experiment, learn and use cluster technologies like Kubernetes, Apache Hadoop, Spark, and even small programs using RPC and OpenMP.
In setting up the raspberry pi (a process which I think I&amp;rsquo;m fairly acquainted with) I ran through a few things which caught me by surprise, or were completely new to me, so after being half way into the process I wanted to write it down so that people that might want to undertake it, can it setup up much more smoothly.</description></item><item><title>"Open Terminal Here" using thunar in i3</title><link>https://chibby0ne.github.io/posts/2018-03-22-opening_terminal_here/</link><pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-03-22-opening_terminal_here/</guid><description>I have i3 and some xfce4 packages installed in an Arch Linux installation. I mostly use i3 because I like how it, as a tiling manager, efficiently uses all of the monitor&amp;rsquo;s real state.
Something that I might forget in the future and was mildly annoying when I made the shift to i3, is making sure thunar (xfce4 file manager) had the option of Open Terminal Here and that it opened the right terminal.</description></item><item><title>libtinfo in Arch Linux</title><link>https://chibby0ne.github.io/posts/2018-03-06-libtinfo_in_arch/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-03-06-libtinfo_in_arch/</guid><description>pacaur is &amp;ldquo;a AUR Helper which minimizes user interaction&amp;rdquo; meaning it helps us install AUR packages without too much hassle.
With it I install and update packages like spotify and google-chrome which are not in the official repositories i.e: core, extra, community or multilib repositories.
What does this have to do with libtinfo?
Well libtinfo (more specifically libtinfo5) was one of those packages managed by pacaur. Problem is every time I did an update it warned with:</description></item><item><title>Java Util's Priority Queue Mishap</title><link>https://chibby0ne.github.io/posts/2018-03-04-java_priority_queue/</link><pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2018-03-04-java_priority_queue/</guid><description>I recently found out by doing Hackerrank&amp;rsquo;s Breadth First Search: Shortest Reach that Java&amp;rsquo;s Priority Queue does not maintain the heap property if you modify the priority of one of the elements in the queue. The only moment where the heap property is maintained is when the queue is being populated, i.e: when elements are added to the queue.
This is better shown with a small example.
Here&amp;rsquo;s a simple PriorityQueue used as a min priority queue, of Vertex, which represents a vertex (node) of a Graph and its members are its index and its distance to the source vertex.</description></item><item><title>Removing of an Nvidia GPU from arch Linux with i3</title><link>https://chibby0ne.github.io/posts/2017-08-20-changing_xorg_conf/</link><pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2017-08-20-changing_xorg_conf/</guid><description>This post is to help me and other people that might have had this issue before (and mostly future me).
When you have installed an Nvidia GPU in Arch Linux with i3 as Window Manager (WM), you probably needed to install and nvidia or another similar package, which contains drivers and generally includes a tool that automatically creates/modifies the Xorg configuration file (Xorg.conf), for the correct operation of the GPU in Arch and i3.</description></item><item><title>The Power of Habit</title><link>https://chibby0ne.github.io/posts/2015-02-20-power_of_habit/</link><pubDate>Fri, 20 Feb 2015 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2015-02-20-power_of_habit/</guid><description>This morning (or afternoon if you&amp;rsquo;re not a morning person) did you consciously decide which shoe to put first? What about shaving after or before taking a shower? Do you remember taking time to decide?
If your answer is No, then you were in the middle of a loop. A habit loop.
Yesterday I started reading a book called, The Power of Habit, by Charles Duhigg. The premise is that habits are as much part of our brain as memory and reason.</description></item><item><title>Finally Looking OK</title><link>https://chibby0ne.github.io/posts/2015-01-28-finally_looking_ok/</link><pubDate>Wed, 28 Jan 2015 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2015-01-28-finally_looking_ok/</guid><description>After several hours of googling, hacking, reading, and messing around with Firefox Inspector tool, things are starting to look a bit better. I&amp;rsquo;ve added a mini-bio and also a dummy first post, just trying things out.
I&amp;rsquo;ve been almost about to give up several times during the day but then again, as Benjamin Franklin said: &amp;ldquo;Energy and Persistence conquer all things&amp;rdquo;.
That&amp;rsquo;s all for now, let&amp;rsquo;s see what else I come up with.</description></item><item><title>First Post (yey!)</title><link>https://chibby0ne.github.io/posts/2015-01-27-first_post/</link><pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate><guid>https://chibby0ne.github.io/posts/2015-01-27-first_post/</guid><description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus interdum ornare augue quis suscipit. Integer dui justo, finibus sit amet rutrum vitae, sagittis vitae nisi. Nam tortor dolor, volutpat vitae sapien nec, accumsan faucibus lorem. Mauris viverra arcu blandit ex feugiat tempor ac non metus. Pellentesque vel arcu bibendum, posuere diam et, rutrum dui. Nunc non porttitor purus. Aliquam sit amet dictum tellus. Nulla interdum tortor sed fermentum sodales. Etiam finibus felis eu nunc elementum vestibulum.</description></item></channel></rss>